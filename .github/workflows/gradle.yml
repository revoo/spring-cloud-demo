# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_and_deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build BootJar with Gradle
      run: chmod +x gradlew && ./gradlew bootjar 
    - name: Configure SSH Connectivity
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > key.pem
        chmod 600 key.pem
    - name: Allow EC2 SSH Access
      env: 
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      run: |
        echo "IP=$(curl https://api.ipify.org/)" >> $GITHUB_ENV 
        aws ec2 authorize-security-group-ingress --group-name "launch-wizard-1" --protocol tcp --port 22 --cidr ${{ env.IP }}/32 --output text
    - name: Deploy to EC2
      env:
        EC2_URL: ${{ secrets.EC2_URL }} 
        USER: "gha-batch-user"
      run: rsync -avh --stats --progress -e "ssh -v -i key.pem -o StrictHostKeyChecking=accept-new" build/libs/* "$USER"@"$EC2_URL":/tmp
    - name: Revoke EC2 SSH Access
      # duplication but limiting scope to local code only rather than making this secret global to the workflow.
      env: 
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      run: aws ec2 revoke-security-group-ingress --group-name "launch-wizard-1" --protocol tcp --port 22 --cidr ${{ env.IP }}/32 --output text
      
